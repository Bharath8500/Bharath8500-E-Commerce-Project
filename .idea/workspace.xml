<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f19766ed-263d-468c-97fd-14c80443b2d2" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/API-Gateway/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/API-Gateway/src/main/java/org/example/APIGatewayApplication.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/API-Gateway/src/main/resources/application-docker.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/API-Gateway/src/main/resources/application.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Discovery-Server/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Discovery-Server/src/main/java/org/example/discovery/server/DiscoveryServer.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Discovery-Server/src/main/resources/application-docker.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Discovery-Server/src/main/resources/application.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Inventory-Service/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Inventory-Service/src/main/java/com/example/demo/InventoryServiceApplication.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Inventory-Service/src/main/java/com/example/demo/controller/InventoryController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Inventory-Service/src/main/java/com/example/demo/model/Inventory.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Inventory-Service/src/main/java/com/example/demo/model/InventoryResponse.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Inventory-Service/src/main/java/com/example/demo/repository/InventoryRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Inventory-Service/src/main/java/com/example/demo/service/InventoryService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Inventory-Service/src/main/resources/application-docker.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Inventory-Service/src/main/resources/application.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Inventory-Service/src/test/java/com/example/demo/InventoryServiceApplicationTests.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Notification-Service/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Notification-Service/src/main/java/org/example/NotificationService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Notification-Service/src/main/java/org/example/notificationDTO/OrderPlacedEvent.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Notification-Service/src/main/resources/application-docker.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Notification-Service/src/main/resources/application.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/src/main/java/com/example/demo/OrderServiceApplication.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/src/main/java/com/example/demo/config/WebClientConfig.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/src/main/java/com/example/demo/controller/OrderController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/src/main/java/com/example/demo/entity/InventoryResponse.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/src/main/java/com/example/demo/entity/Order.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/src/main/java/com/example/demo/entity/OrderLineItem.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/src/main/java/com/example/demo/orderDTO/OrderLineItemsDTO.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/src/main/java/com/example/demo/orderDTO/OrderPlacedEvent.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/src/main/java/com/example/demo/orderDTO/OrderRequest.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/src/main/java/com/example/demo/repository/OrderRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/src/main/java/com/example/demo/service/OrderService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/src/main/resources/application-docker.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/src/main/resources/application.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/src/main/resources/data.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/src/test/java/com/example/demo/OrderServiceApplicationTests.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Product-Service/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Product-Service/src/main/java/com/example/demo/DTO/ProductRequest.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Product-Service/src/main/java/com/example/demo/DTO/ProductResponse.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Product-Service/src/main/java/com/example/demo/ProductService1Application.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Product-Service/src/main/java/com/example/demo/controller/ProductController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Product-Service/src/main/java/com/example/demo/entity/Product.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Product-Service/src/main/java/com/example/demo/repository/ProductRepo.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Product-Service/src/main/java/com/example/demo/service/ProductService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Product-Service/src/main/java/com/example/demo/service/ProductServiceImpl.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Product-Service/src/main/resources/application-docker.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Product-Service/src/main/resources/application.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Product-Service/src/main/resources/data.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Product-Service/src/test/java/com/example/demo/ProductService1ApplicationTests.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2gpfzZsnRSELHwn5LLJhJbuVoxU" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;Application.APIGateway.executor&quot;: &quot;Run&quot;,
    &quot;Application.APIGatewayApplication.executor&quot;: &quot;Run&quot;,
    &quot;Application.DiscoveryServer.executor&quot;: &quot;Run&quot;,
    &quot;Application.InventoryServiceApplication.executor&quot;: &quot;Run&quot;,
    &quot;Application.NotificationService.executor&quot;: &quot;Run&quot;,
    &quot;Application.OrderServiceApplication.executor&quot;: &quot;Run&quot;,
    &quot;Application.ProductService1Application.executor&quot;: &quot;Run&quot;,
    &quot;Application.com.example.api.gateway.APIGateway.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.api-gateway: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.broker: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.discovery-server: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.discovery: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.grafana: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.inventory-service: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.kafka: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.mongo: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.mysql-inventory: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.mysql-service: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.mysql: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.mysqldb: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.notification-service: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.order-service: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.postgres-inventory: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.postgres-order: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.product-service: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.prometheus: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.zipkin: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.zookeeper: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Maven.Microservices-Parent [build].executor&quot;: &quot;Run&quot;,
    &quot;Maven.Microservices-Parent [clean,compile...].executor&quot;: &quot;Run&quot;,
    &quot;Maven.Microservices-Parent [clean].executor&quot;: &quot;Run&quot;,
    &quot;Maven.Microservices-Parent [com.google.cloud.tools:jib-maven-plugin:3.2.1:build].executor&quot;: &quot;Run&quot;,
    &quot;Maven.Microservices-Parent [install].executor&quot;: &quot;Run&quot;,
    &quot;Maven.Microservices-Parent [jib:build].executor&quot;: &quot;Run&quot;,
    &quot;Maven.Microservices-Parent [jib:clean].executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/bharathchowdary/Documents/SpringBoot-Projects/Microservices-Parent/Order-Service/src/main/resources&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;tasks&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="com.example.demo.entity" />
      <recent name="com.example.demo.model" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/Order-Service/src/main/resources" />
      <recent name="$PROJECT_DIR$/API-Gateway/src/main/resources" />
      <recent name="$PROJECT_DIR$/API-Gateway/src/main" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="org.example.notificationDTO" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="mvn jib:clean" />
      <command value="mvn build" />
      <command value="mvn jib:build" />
      <command value="mvn clean" />
      <command value="mvn install" />
      <command value="mvn clean compile jib:build" />
    </option>
  </component>
  <component name="RunManager" selected="Docker.docker-compose.yml: Compose Deployment">
    <configuration name="APIGatewayApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.APIGatewayApplication" />
      <module name="api-gateway" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="DiscoveryServer" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.discovery.server.DiscoveryServer" />
      <module name="discovery-server" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.discovery.server.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="OrderServiceApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.example.demo.OrderServiceApplication" />
      <module name="order-service" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.example.demo.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.order-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="order-service" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
        <item itemvalue="Application.OrderServiceApplication" />
        <item itemvalue="Application.APIGatewayApplication" />
        <item itemvalue="Application.DiscoveryServer" />
        <item itemvalue="Docker.docker-compose.yml.order-service: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SvnConfiguration">
    <configuration>$USER_HOME$/.subversion</configuration>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f19766ed-263d-468c-97fd-14c80443b2d2" name="Changes" comment="" />
      <created>1716399706518</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1716399706518</updated>
    </task>
    <servers />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/Order-Service/src/main/java/com/example/demo/service/OrderService.java</url>
          <line>57</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/Order-Service/src/main/java/com/example/demo/service/OrderService.java</url>
          <line>59</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/Microservices_Parent$DiscoveryServer.ic" NAME="DiscoveryServer Coverage Results" MODIFIED="1717465377211" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
      <FILTER>org.example.discovery.server.*</FILTER>
    </SUITE>
  </component>
</project>